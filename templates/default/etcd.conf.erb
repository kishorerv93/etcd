#!/bin/sh
### BEGIN INIT INFO
# Provides:          <NAME>
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       <DESCRIPTION>
### END INIT INFO

INITIAL_CLUSTER="forremove<% @nodes.each do |res| -%>,<%= res['hostname'] %>=http://<%= res['private_ip'] %>:2380<% end -%>"
NAME="<%= node["opsworks"]["instance"]["hostname"] %>"
INITIAL_CLUSTER_STATE="new"
INITIAL_CLUSTER_TOKEN="etcd-cluster01"
INITIAL_ADVERTISE_PEER_URLS="http://<%= node["opsworks"]["instance"]["private_ip"] %>:2380"
DATA_DIR="/var/etcd"
LISTEN_PEER_URLS="http://<%= node["opsworks"]["instance"]["private_ip"] %>:2380"
LISTEN_CLIENT_URLS="http://<%= node["opsworks"]["instance"]["private_ip"] %>:2379"
ADVERTISE_CLIENT_URLS="http://<%= node["opsworks"]["instance"]["private_ip"] %>:2379,http://localhost:2379,http://localhost:4001"
SCRIPT="/usr/local/bin/etcd --name $NAME --initial-cluster-state $INITIAL_CLUSTER_STATE --initial-cluster $INITIAL_CLUSTER --initial-cluster-token $INITIAL_CLUSTER_TOKEN --initial-advertise-peer-urls $INITIAL_ADVERTISE_PEER_URLS --data-dir $DATA_DIR --listen-peer-urls $LISTEN_PEER_URLS --listen-client-urls $LISTEN_CLIENT_URLS --advertise-client-urls $ADVERTISE_CLIENT_URLS"
RUNAS="root"
NAME="etcd"

PIDFILE=/var/run/$NAME.pid
LOGFILE=/var/log/$NAME.log

start() {
  if [ -f "$PIDFILE" ] && kill -0 $(cat "$PIDFILE"); then
    echo 'Service already running' >&2
    return 1
  fi
  echo 'Starting service…' >&2
  local CMD="$SCRIPT &> \"$LOGFILE\" & echo \$!"
  su -c "$CMD" $RUNAS > "$PIDFILE"
  echo 'Service started' >&2
}

stop() {
  if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
    echo 'Service not running' >&2
    return 1
  fi
  echo 'Stopping service…' >&2
  kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
  echo 'Service stopped' >&2
}

uninstall() {
  echo -n "Are you really sure you want to uninstall this service? That cannot be undone. [yes|No] "
  local SURE
  read SURE
  if [ "$SURE" = "yes" ]; then
    stop
    rm -f "$PIDFILE"
    echo "Notice: log file is not be removed: '$LOGFILE'" >&2
    update-rc.d -f $NAME remove
    rm -fv "$0"
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  uninstall)
    uninstall
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|uninstall}"
esac
